USE DATABASE PRACTICE_DATABASE;

--Task 1. Load the given dataset into snowflake with a primary key to Order Date column.

--TO CREATE TABLE HEADERS, I HAVE USED ANACONDA PROMPT AND THE FOLLOWING CODE
-- (base) D:\>csvsql --dialect mysql --snifflimit 100000 sales_data_final.csv > output_Sales_Data_Final.sql

CREATE OR REPLACE TABLE SALES_DATA
(
    order_id VARCHAR(15) NOT NULL, 
	order_date DATE NOT NULL PRIMARY KEY, 
	ship_date DATE NOT NULL, 
	ship_mode VARCHAR(14) NOT NULL, 
	customer_name VARCHAR(22) NOT NULL, 
	segment VARCHAR(11) NOT NULL, 
	state VARCHAR(36) NOT NULL, 
	country VARCHAR(32) NOT NULL, 
	market VARCHAR(6) NOT NULL, 
	region VARCHAR(14) NOT NULL, 
	product_id VARCHAR(16) NOT NULL, 
	category VARCHAR(15) NOT NULL, 
	sub_category VARCHAR(11) NOT NULL, 
	product_name VARCHAR(127) NOT NULL, 
	sales DECIMAL(38, 0) NOT NULL, 
	quantity DECIMAL(38, 0) NOT NULL, 
	discount DECIMAL(38, 3) NOT NULL, 
	profit DECIMAL(38, 5) NOT NULL, 
	shipping_cost DECIMAL(38, 2) NOT NULL, 
	order_priority VARCHAR(8) NOT NULL, 
	year DECIMAL(38, 0) NOT NULL
);


--TASK 2. Change the Primary key to Order Id Column.

DESCRIBE TABLE SALES_DATA;

ALTER TABLE SALES_DATA
DROP PRIMARY KEY;

ALTER TABLE SALES_DATA
ADD PRIMARY KEY(ORDER_ID);

DESCRIBE TABLE SALES_DATA;


--TASK 3. Check the data type for Order date and Ship date and mention in what data type it should be?
--ANSWER : THE DATA TYPE FOR ORDER DATE & SHIP DATE MUST BE IN DATE FORMAT
--AS I HAVE CLEANED THE DATA COMPLETELY, I WAS ABLE TO SET THE ORDER DATE & SHIP DATE TO DATE FORMAT

--TO CONVERT STRING TO DATE WE CAN ALSO USE THE FOLLOWING CODE
SELECT TO_DATE('2022.12.18', 'YYYY.MM.DD'), DATE('18.12.1989','DD.MM.YYYY');

--OR
SELECT CAST(ORDER_DATE AS DATE) AS CONVERTED_DATE FROM SALES_DATA;

SELECT CAST(SHIP_DATE AS DATE) AS CONVERTED_DATE FROM SALES_DATA;
--AS THE ORDER DATE & SHIP DATE ARE ALREADY IN DATE FORMAT, HENCE NOT SETTING IT AGAIN


--TASK 4. Create a new column called order_extract and extract the number after the last ‘–‘from Order ID column.

ALTER TABLE SALES_DATA
ADD COLUMN ORDER_EXTRACT NUMBER;

--METHOD 1
UPDATE SALES_DATA
    SET ORDER_EXTRACT = SUBSTRING(ORDER_ID, 9);
    
--METHOD 2
UPDATE SALES_DATA
    SET ORDER_EXTRACT = SPLIT_PART(ORDER_ID, '-',3);
       
SELECT ORDER_ID , ORDER_EXTRACT FROM SALES_DATA;


--TASK 5. Create a new column called Discount Flag and categorize it based on discount. Use ‘Yes’ if the discount is greater than zero else ‘No’.

ALTER TABLE SALES_DATA
ADD COLUMN DISCOUNT_FLAG VARCHAR(15);

UPDATE SALES_DATA
SET DISCOUNT_FLAG =
    CASE
        WHEN DISCOUNT > 0 THEN 'YES'
        ELSE 'NO'
    END;
    
SELECT DISCOUNT , DISCOUNT_FLAG FROM SALES_DATA;


--TASK 6. Create a new column called process days and calculate how many days it takes for each order id to process from the order to its shipment.

ALTER TABLE SALES_DATA
ADD COLUMN PROCESS_DAYS INT;

--METHOD 1
UPDATE SALES_DATA
SET PROCESS_DAYS = SHIP_DATE - ORDER_DATE;

SELECT ORDER_DATE , SHIP_DATE, PROCESS_DAYS FROM SALES_DATA;

--METHOD 2
UPDATE SALES_DATA
SET PROCESS_DAYS = DATEDIFF(DAYS, ORDER_DATE, SHIP_DATE);

--TASK 7. Create a new column called Rating and then based on the Process dates give rating like given below.
--a. If process days less than or equal to 3days then rating should be 5
--b. If process days are greater than 3 and less than or equal to 6 then rating should be 4
--c. If process days are greater than 6 and less than or equal to 10 then ratingshould be 3
--d. If process days are greater than 10 then the rating should be 2.

ALTER TABLE SALES_DATA
ADD COLUMN RATING INT;

--METHOD 1
UPDATE SALES_DATA
SET RATING =
    CASE
        WHEN PROCESS_DAYS <= 3 THEN 5
        WHEN PROCESS_DAYS > 3 AND PROCESS_DAYS <= 6 THEN 4
        WHEN PROCESS_DAYS > 6 AND PROCESS_DAYS <= 10 THEN 3
        ELSE 2
    END;

--METHOD 2
UPDATE SALES_DATA
SET RATING =
    CASE
        WHEN PROCESS_DAYS <= 3 THEN 5
        WHEN PROCESS_DAYS BETWEEN 4 AND 6 THEN 4
        WHEN PROCESS_DAYS BETWEEN 7 AND 10 THEN 3
        ELSE 2
    END;
    
SELECT PROCESS_DAYS , RATING FROM SALES_DATA;
